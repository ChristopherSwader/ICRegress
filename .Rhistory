boxplots=T,
starting_population=c(500),
hold_back_cores=4,
mutation_rate = .1,
n_children = 2,
nelitism=3,
death_by_ageing=40)
b_results <- benchmarking(random_seeds=as.integer( c(100001:100003)),
generations=c(4),
solution_thresh = c( .01 ),
n_strands = c(50),
real_models = c( 20),
error_sd = c(.05),
n_IVs=c(30),
n_cases= 5000, #n rows in dataset
test_set_model_closeness= c("residuals"),
parallelize=F,
detailed_plots_on=F,
boxplots=T,
starting_population=c(500),
hold_back_cores=4,
mutation_rate = .1,
n_children = 2,
nelitism=3,
death_by_ageing=40)
dim(Df)
dim(df)
traceback()
source("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/GIT/ICRegress create_profile_fix.R")
b_results <- benchmarking(random_seeds=as.integer( c(100001:100003)),
generations=c(4),
solution_thresh = c( .01 ),
n_strands = c(50),
real_models = c( 20),
error_sd = c(.05),
n_IVs=c(30),
n_cases= 5000, #n rows in dataset
test_set_model_closeness= c("residuals"),
parallelize=F,
detailed_plots_on=F,
boxplots=T,
starting_population=c(500),
hold_back_cores=4,
mutation_rate = .1,
n_children = 2,
nelitism=3,
death_by_ageing=40)
source("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/GIT/ICRegress create_profile_fix.R")
b_results <- benchmarking(random_seeds=as.integer( c(100001:100003)),
generations=c(4),
solution_thresh = c( .01 ),
n_strands = c(50),
real_models = c( 20),
error_sd = c(.05),
n_IVs=c(30),
n_cases= 5000, #n rows in dataset
test_set_model_closeness= c("residuals"),
parallelize=F,
detailed_plots_on=F,
boxplots=T,
starting_population=c(500),
hold_back_cores=4,
mutation_rate = .1,
n_children = 2,
nelitism=3,
death_by_ageing=40)
b_results <- benchmarking(random_seeds=as.integer( c(100003)),
generations=c(4),
solution_thresh = c( .01 ),
n_strands = c(50),
real_models = c( 20),
error_sd = c(.05),
n_IVs=c(30),
n_cases= 5000, #n rows in dataset
test_set_model_closeness= c("residuals"),
parallelize=F,
detailed_plots_on=F,
boxplots=T,
starting_population=c(500),
hold_back_cores=4,
mutation_rate = .1,
n_children = 2,
nelitism=3,
death_by_ageing=40)
source("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/GIT/ICRegress create_profile_fix.R")
b_results <- benchmarking(random_seeds=as.integer( c(100003)),
generations=c(4),
solution_thresh = c( .01 ),
n_strands = c(50),
real_models = c( 20),
error_sd = c(.05),
n_IVs=c(30),
n_cases= 5000, #n rows in dataset
test_set_model_closeness= c("residuals"),
parallelize=F,
detailed_plots_on=F,
boxplots=T,
starting_population=c(500),
hold_back_cores=4,
mutation_rate = .1,
n_children = 2,
nelitism=3,
death_by_ageing=40)
streamlined_data_and_models$dna_pool
streamlined_data_and_models$dna_profiles
ncol(profiles)>ncol(models)
ncol(profiles)
ncol(models)
models
profiles
source("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/GIT/ICRegress create_profile_fix.R")
b_results <- benchmarking(random_seeds=as.integer( c(100003)),
generations=c(4),
solution_thresh = c( .01 ),
n_strands = c(50),
real_models = c( 20),
error_sd = c(.05),
n_IVs=c(30),
n_cases= 5000, #n rows in dataset
test_set_model_closeness= c("residuals"),
parallelize=F,
detailed_plots_on=F,
boxplots=T,
starting_population=c(500),
hold_back_cores=4,
mutation_rate = .1,
n_children = 2,
nelitism=3,
death_by_ageing=40)
source("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/GIT/ICRegress create_profile_fix.R")
b_results <- benchmarking(random_seeds=as.integer( c(100003)),
generations=c(4),
solution_thresh = c( .01 ),
n_strands = c(50),
real_models = c( 20),
error_sd = c(.05),
n_IVs=c(30),
n_cases= 5000, #n rows in dataset
test_set_model_closeness= c("residuals"),
parallelize=F,
detailed_plots_on=F,
boxplots=T,
starting_population=c(500),
hold_back_cores=4,
mutation_rate = .1,
n_children = 2,
nelitism=3,
death_by_ageing=40)
original_data
head(original_data)
original_variables
dummy_sets
df_full_dummies <- dummy_cols(original_data, select_columns = original_variables[dummy_sets], remove_first_dummy = F, ignore_na = T, remove_selected_columns = T)
dummy_sets
newdf
head(newdf)
save_row_names <- rownames(newdf)
df_full_dummies <- dummy_cols(newdf, select_columns = original_variables[dummy_sets], remove_first_dummy = F, ignore_na = T, remove_selected_columns = T)
source("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/GIT/ICRegress create_profile_fix.R")
b_results <- benchmarking(random_seeds=as.integer( c(100003)),
generations=c(4),
solution_thresh = c( .01 ),
n_strands = c(50),
real_models = c( 20),
error_sd = c(.05),
n_IVs=c(30),
n_cases= 5000, #n rows in dataset
test_set_model_closeness= c("residuals"),
parallelize=F,
detailed_plots_on=F,
boxplots=T,
starting_population=c(500),
hold_back_cores=4,
mutation_rate = .1,
n_children = 2,
nelitism=3,
death_by_ageing=40)
source("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/GIT/ICRegress create_profile_fix.R")
b_results <- benchmarking(random_seeds=as.integer( c(100003)),
generations=c(4),
solution_thresh = c( .01 ),
n_strands = c(50),
real_models = c( 20),
error_sd = c(.05),
n_IVs=c(30),
n_cases= 5000, #n rows in dataset
test_set_model_closeness= c("residuals"),
parallelize=F,
detailed_plots_on=F,
boxplots=T,
starting_population=c(500),
hold_back_cores=4,
mutation_rate = .1,
n_children = 2,
nelitism=3,
death_by_ageing=40)
streamline_testset_dna_profiles
newdf
dim(newdf)
warnings()
source("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/GIT/ICRegress create_profile_fix.R")
source("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/GIT/ICRegress create_profile_fix.R")
b_results <- benchmarking(random_seeds=as.integer( c(100003)),
generations=c(4),
solution_thresh = c( .01 ),
n_strands = c(50),
real_models = c( 20),
error_sd = c(.05),
n_IVs=c(30),
n_cases= 5000, #n rows in dataset
test_set_model_closeness= c("residuals"),
parallelize=F,
detailed_plots_on=F,
boxplots=T,
starting_population=c(500),
hold_back_cores=4,
mutation_rate = .1,
n_children = 2,
nelitism=3,
death_by_ageing=40)
set.seed(1234)
icr_results <- icr(generations=4, #1000 as default
input_data=ess2016,
dv="happy",
iv=c("female", "age", "cntry", "ppltrst", "sclmeet",      "income", "health"),
starting_pop=100, #1000
n_strands = 100,
mutation_rate = .02,
solution_thresh = .003,
n_children=3,
death_by_ageing =60,
nelitism=10)
setwd("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR")
devtools::install("ICRegress")
setwd("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR")
devtools::install("ICRegress")
setwd("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR")
devtools::install("ICRegress")
library(ICRegress)
data("ess2016")
set.seed(1234)
icr_results <- icr(generations=400, #1000 as default
input_data=ess2016,
dv="happy",
iv=c("female", "age", "cntry", "ppltrst", "sclmeet",      "income", "health"),
starting_pop=10000, #1000
n_strands = 100,
mutation_rate = .02,
solution_thresh = .003,
n_children=3,
death_by_ageing =60,
nelitism=10)
icr_results$cutlist
icr_results$model_subgroup_profiles
icr_results$model_subgroup_profiles
setwd("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/GIT/vignette")
saveRDS(icr_results, "icr_results.RDS")
icr_results$model_subgroup_profiles
icr_results <- readRDS(file.choose())
icr_results$model_subgroup_profiles
source("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/ICRegress/R/ICRegress.R")
data("ess2016")
set.seed(1234)
icr_results <- icr(generations=400, #1000 as default
input_data=ess2016,
dv="happy",
iv=c("female", "age", "cntry", "ppltrst", "sclmeet",      "income", "health"),
starting_pop=10000, #1000
n_strands = 100,
mutation_rate = .02,
solution_thresh = .003,
n_children=3,
death_by_ageing =60,
nelitism=10)
source("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/ICRegress/R/ICRegress.R")
set.seed(1234)
icr_results <- icr(generations=400, #1000 as default
input_data=ess2016,
dv="happy",
iv=c("female", "age", "cntry", "ppltrst", "sclmeet",      "income", "health"),
starting_pop=10000, #1000
n_strands = 100,
mutation_rate = .02,
solution_thresh = .003,
n_children=3,
death_by_ageing =60,
nelitism=10)
head(ess2016)
setwd("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/ICRegress")
devtools::install("ICRegress")
setwd("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR")
devtools::install("ICRegress")
library(ICRegress)
data("ess2016")
set.seed(1234)
icr_results <- icr(generations=400, #1000 as default
input_data=ess2016,
dv="happy",
iv=c("female", "age", "cntry", "ppltrst", "sclmeet",      "income", "health"),
starting_pop=10000, #1000
n_strands = 100,
mutation_rate = .02,
solution_thresh = .003,
n_children=3,
death_by_ageing =60,
nelitism=10)
streamlined_data_and_models
View(streamlined_data_and_models)
#change model names in the model assignment and in the dnaprofiles
models <- rownames( streamlined_data_and_models$dna_profiles)
models
unique(streamlined_data_and_models$model_assignment$model)
new_model_names <- 1:length(models)
new_model_names
head(streamlined_data_and_models$model_assignment$model)
match(streamlined_data_and_models$model_assignment$model, models)
head( match(streamlined_data_and_models$model_assignment$model, models))
new_model_data_order <- match(streamlined_data_and_models$model_assignment$model, models)
streamlined_data_and_models$model_assignment$model <- new_model_data_order
View(streamlined_data_and_models)
View(streamlined_data_and_models$dna_profiles)
rownames( streamlined_data_and_models$dna_profiles) <- new_model_names
View(streamlined_data_and_models$dna_profiles)
source("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/ICRegress/R/ICRegress.R")
set.seed(1234)
icr_results <- icr(generations=400, #1000 as default
input_data=ess2016,
dv="happy",
iv=c("female", "age", "cntry", "ppltrst", "sclmeet",      "income", "health"),
starting_pop=10000, #1000
n_strands = 100,
mutation_rate = .02,
solution_thresh = .003,
n_children=3,
death_by_ageing =60,
nelitism=10)
saveRDS(icr_results, "icr_results.RDS")
setwd("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/GIT/vignette")
saveRDS(icr_results, "icr_results.RDS")
View(icr_results)
View(icr_results$models)
icr_results$models
icr_results$model_subgroup_profiles
View(icr_results)
setwd("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/GIT/vignette")
icr_results <- readRDS("icr_results.RDS")
icr_results <- readRDS("icr_results.RDS")
icr_results$models
head(icr_results$original_data_with_new_models)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
warning = FALSE,
message = FALSE,
eval=FALSE)
icr_results$cutlist
icr_results$model_subgroup_profiles
icr_results$model_subgroup_profiles
icr_results$models
View(icr_results)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
warning = FALSE,
message = FALSE,
eval=FALSE)
data("benchmark_results")
library(ICRegress)
data("benchmark_results")
data("ess2016")
View(ess2016)
icr_results$models
source("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/ICRegress/R/ICRegress.R")
data("ess2016")
?recode
ess2016$female <- ifelse(x=2, "female" ,"male")
ess2016$female <- if_else(x=2, "female" ,"male")
ess2016$female <- if_else(2, "female" ,"male")
ess2016$female <- if_else(ess2016$female==2, "female" ,"male")
str(ess2016$female)
icr_results <- icr(generations=4, #1000 as default
input_data=ess2016,
dv="happy",
iv=c("female", "age", "cntry", "ppltrst", "sclmeet",      "income", "health"),
starting_pop=100, #1000
n_strands = 50,
mutation_rate = .02,
solution_thresh = .003,
n_children=3,
death_by_ageing =60,
nelitism=10)
source("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/ICRegress/R/ICRegress.R")
icr_results <- icr(generations=4, #1000 as default
input_data=ess2016,
dv="happy",
iv=c("female", "age", "cntry", "ppltrst", "sclmeet",      "income", "health"),
starting_pop=100, #1000
n_strands = 50,
mutation_rate = .02,
solution_thresh = .003,
n_children=3,
death_by_ageing =60,
nelitism=10)
is.character(str(input_data))
source("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/ICRegress/R/ICRegress.R")
ess2016$female <-is.factor(ess2016$female)
icr_results <- icr(generations=4, #1000 as default
input_data=ess2016,
dv="happy",
iv=c("female", "age", "cntry", "ppltrst", "sclmeet",      "income", "health"),
starting_pop=100, #1000
n_strands = 50,
mutation_rate = .02,
solution_thresh = .003,
n_children=3,
death_by_ageing =60,
nelitism=10)
source("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/ICRegress/R/ICRegress.R")
icr_results <- icr(generations=400, #1000 as default
input_data=ess2016,
dv="happy",
iv=c("female", "age", "cntry", "ppltrst", "sclmeet",      "income", "health"),
starting_pop=10000, #1000
n_strands = 100,
mutation_rate = .02,
solution_thresh = .003,
n_children=3,
death_by_ageing =60,
nelitism=10)
icr_results <- icr(generations=4, #1000 as default
input_data=ess2016,
dv="happy",
iv=c("female", "age", "cntry", "ppltrst", "sclmeet",      "income", "health"),
starting_pop=100, #1000
n_strands = 120,
mutation_rate = .02,
solution_thresh = .003,
n_children=3,
death_by_ageing =60,
nelitism=10)
icr_results <- icr(generations=4, #1000 as default
input_data=ess2016,
dv="happy",
iv=c("female", "age", "cntry", "ppltrst", "sclmeet",      "income", "health"),
starting_pop=100, #1000
n_strands = 20,
mutation_rate = .02,
solution_thresh = .003,
n_children=3,
death_by_ageing =60,
nelitism=10)
View(icr_results)
b_results <- benchmarking(random_seeds=as.integer( c(100001:100050)),
generations=c(1, 5),
solution_thresh = c( .01 ),
n_strands = c(50),
real_models = c( 20),
error_sd = c(.05),
n_IVs=c(30),
n_cases= 5000, #n rows in dataset
test_set_model_closeness= c("residuals"),
parallelize=F,
detailed_plots_on=F,
boxplots=T,
starting_population=c(500),
hold_back_cores=4,
mutation_rate = .1,
n_children = 2,
nelitism=3,
death_by_ageing=40)
setwd("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR")
setwd("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/ICRegress")
devtools::document()
devtools::document()
setwd("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR")
devtools::install("ICRegress")
library(devtools)
setwd("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/ICRegress")
install_github("ChristopherSwader/ICRegress")
install_github("ChristopherSwader/ICRegress")
?install_github
setwd("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR/ICRegress")
citation("ICRegress")
package_version(1.0)
package_version("1.0")
package_version("0.0.0.9000")
citation("ICRegress")
devtools::install("ICRegress")
setwd("C:/Users/soc-csw/Dropbox/Projects/Interpretable Configurational Regression ICR")
devtools::install("ICRegress")
citation("ICRegress")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
warning = FALSE,
message = FALSE,
eval=FALSE)
output:
pdf_document:
fig_crop: false
tinytex::install_tinytex()
tinytex::install_tinytex()
y
tinytex::install_tinytex()
Y
tinytex::install_tinytex()
tinytex::check_installed()
tinytex::install_tinytex()
library(tinytex)
tinytex::install_tinytex()
ys.which('pdflatex')
Sys.which('pdflatex')
